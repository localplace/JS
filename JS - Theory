JS - Theory

Both Front end and back end webserver (Node.js)

alert :- alert box
document.write 

all java_script code needs to placed in scripts tag

We can use Mozilla Developer Network for documentation


Arrays

1) addelements at end:- push
2) add at beginning  :- unshift
3) pop :- remove and return the last item in array;
4) shift :- removes first item and returns


----------------------------------------------------------

Arrays 

concat
var currentStudents = ['Joan','John'];
var newStudents = ['Stu1','Stu2'];
var allStudents = currentStudents.concat(newStudents);

join
var daysInWeek = ['Monday','Tuesday'];
var dayString = dayInWeek.join(',');
console.log(dayString);

indexOf Method
var fruit = ['Apple', 'Orange', 'GrapeFruit'];

indexOf = -1, if item is not present
indexOf returns which index its present in.

var grades = [ [80, 90, 100, 95],
			   [75, 95, 85, 100],
			   [60, 80, 77, 90]
			   ];

			   grades[0];
			   grades[1];
			   grades[2];

			   grades[0][3] = 95


var person = {
  name : "Malathi",
  address : "Earth",
  todolist : ["One" ,"Two" ,"Three"]
};

document.write(person['name']);
document.write(person.name);


const

value of the variabke does not change. cannot override this value


when dealing with arrays and objects, we can push or add attributes to object, but we cannot reassign the object 
let 


let 

we can reassign variable

var versus let

let has block level scoping

arrow function

const  sayName = () => {
    const message = "My name is " + name;
    console.log(message);
}

sayName();

const  square1 = (x) => {
    console.log(x*x);
}

square1(10);

const  square1 = (x,y) => {
    console.log(x*y);
}

sayName();
square1(10,12);


Interactivity in JS

a) Selecting elements on page
b) Manipulating elements
c) Listening for user action.

//note location.href :- to get current url

window object contains all the global objects such as alert, prompy etc 
window.alert("Hi");


//document object, we can manipulate objects on the currently loaded web page .

document.getElementById("myHeading").style.color = "purple";

document.getElementById("myHeading").style.backgroundColor = "yellow";


//DOM :- Document Object Model

DOM :- representation of the webpage , tree like strcuture.
